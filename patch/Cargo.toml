[package]
name = "vector"
version = "0.25.0"
authors = [
    "Vector Contributors <vector@datadoghq.com>",
]
edition = "2021"
description = "A lightweight and ultra-fast tool for building observability pipelines"
homepage = "https://vector.dev"
license = "MPL-2.0"
readme = "README.md"
publish = false
default-run = "vector"
autobenches = false
rust-version = "1.64.0"
sources = [
    "custom-sources-logs",
]
custom-sources-logs = [
    "sources-file",
    "sources-demo_logs",
    "sources-stdin",
    "sources-http_server",
    "sources-kafka",
    "sources-vector",
]
sinks = [
    "custom-sinks-logs",
]
custom-sinks-logs = [
    "sinks-blackhole",
    "sinks-clickhouse",
    "sinks-console",
    "sinks-elasticsearch",
    "sinks-file",
    "sinks-http",
    "sinks-influxdb",
    "sinks-kafka",
    "sinks-loki",
    "sinks-memory_queue",
    "sinks-nats",
    "sinks-pulsar",
    "sinks-redis",
    "sinks-socket",
    "sinks-splunk_hec",
    "sinks-vector",
    "sinks-websocket",
]

[package.metadata.deb]
name = "vector"
section = "admin"
maintainer-scripts = "distribution/debian/scripts/"
conf-files = [
    "/etc/vector/vector.toml",
    "/etc/default/vector",
]
assets = [
    [
        "target/release/vector",
        "/usr/bin/",
        "755",
    ],
    [
        "config/vector.toml",
        "/etc/vector/vector.toml",
        "644",
    ],
    [
        "config/examples/*",
        "/etc/vector/examples/",
        "644",
    ],
    [
        "distribution/systemd/vector.service",
        "/lib/systemd/system/vector.service",
        "644",
    ],
    [
        "distribution/systemd/vector.default",
        "/etc/default/vector",
        "600",
    ],
]
license-file = [
    "target/debian-license.txt",
]
extended-description-file = "target/debian-extended-description.txt"

[package.metadata.deb.systemd-units]
unit-scripts = "distribution/systemd/"
enable = false
start = false

[package.metadata.deb.variants.armv7-unknown-linux-gnueabihf]
depends = "libc6 (>= 2.15)"

[package.metadata.deb.variants.x86_64-unknown-linux-gnu]
depends = "libc6 (>= 2.15)"

[package.metadata.deb.variants.x86_64-unknown-linux-musl]
depends = ""

[package.metadata.deb.variants.aarch64-unknown-linux-gnu]
depends = "libc6 (>= 2.18)"

[package.metadata.deb.variants.aarch64-unknown-linux-musl]
depends = ""

[[bin]]
name = "graphql-schema"
path = "src/api/schema/gen.rs"
required-features = [
    "default-no-api-client",
]

[[bin]]
name = "secret-backend-example"
path = "src/config/loading/secret_backend_example.rs"

[profile.dev]
split-debuginfo = "unpacked"

[profile.release]
debug = false

[profile.bench]
debug = true

[workspace]
members = [
    ".",
    "lib/codecs",
    "lib/datadog/filter",
    "lib/datadog/grok",
    "lib/datadog/search-syntax",
    "lib/dnsmsg-parser",
    "lib/enrichment",
    "lib/fakedata",
    "lib/file-source",
    "lib/k8s-e2e-tests",
    "lib/k8s-test-framework",
    "lib/loki-logproto",
    "lib/lookup",
    "lib/portpicker",
    "lib/prometheus-parser",
    "lib/opentelemetry-proto",
    "lib/tracing-limit",
    "lib/value",
    "lib/vector-api-client",
    "lib/vector-buffers",
    "lib/vector-common",
    "lib/vector-config",
    "lib/vector-config-common",
    "lib/vector-config-macros",
    "lib/vector-core",
    "lib/vector-vrl-functions",
    "lib/vrl/cli",
    "lib/vrl/compiler",
    "lib/vrl/core",
    "lib/vrl/diagnostic",
    "lib/vrl/parser",
    "lib/vrl/stdlib",
    "lib/vrl/tests",
    "lib/vrl/proptests",
    "lib/vrl/vrl",
    "lib/vrl/web-playground",
]

[dependencies]
metrics = "0.20.1"

[dependencies.codecs]
path = "lib/codecs"
default-features = false

[dependencies.dnsmsg-parser]
path = "lib/dnsmsg-parser"
optional = true

[dependencies.enrichment]
path = "lib/enrichment"

[dependencies.fakedata]
path = "lib/fakedata"
optional = true

[dependencies.file-source]
path = "lib/file-source"
optional = true

[dependencies.lookup]
path = "lib/lookup"

[dependencies.portpicker]
path = "lib/portpicker"

[dependencies.prometheus-parser]
path = "lib/prometheus-parser"
optional = true

[dependencies.opentelemetry-proto]
path = "lib/opentelemetry-proto"
optional = true

[dependencies.tracing-limit]
path = "lib/tracing-limit"

[dependencies.value]
path = "lib/value"

[dependencies.vector-api-client]
path = "lib/vector-api-client"
optional = true

[dependencies.vector-buffers]
path = "lib/vector-buffers"
default-features = false

[dependencies.vector-common]
path = "lib/vector-common"

[dependencies.vector-config]
path = "lib/vector-config"

[dependencies.vector-config-common]
path = "lib/vector-config-common"

[dependencies.vector-config-macros]
path = "lib/vector-config-macros"

[dependencies.vector-core]
path = "lib/vector-core"
default-features = false
features = [
    "vrl",
]

[dependencies.vector-vrl-functions]
path = "lib/vector-vrl-functions"

[dependencies.vrl-cli]
path = "lib/vrl/cli"
optional = true

[dependencies.loki-logproto]
path = "lib/loki-logproto"
optional = true

[dependencies.async-stream]
version = "0.3.3"
default-features = false

[dependencies.async-trait]
version = "0.1.57"
default-features = false

[dependencies.futures]
version = "0.3.24"
default-features = false
features = [
    "compat",
    "io-compat",
]
package = "futures"

[dependencies.tokio]
version = "1.21.2"
default-features = false
features = [
    "full",
]

[dependencies.tokio-openssl]
version = "0.6.3"
default-features = false

[dependencies.tokio-stream]
version = "0.1.11"
default-features = false
features = [
    "net",
    "sync",
    "time",
]

[dependencies.tokio-util]
version = "0.7"
default-features = false
features = [
    "io",
    "time",
]

[dependencies.console-subscriber]
version = "0.1.8"
default-features = false
optional = true

[dependencies.tracing]
version = "0.1.34"
default-features = false

[dependencies.tracing-core]
version = "0.1.26"
default-features = false

[dependencies.tracing-futures]
version = "0.2.5"
default-features = false
features = [
    "futures-03",
]

[dependencies.tracing-subscriber]
version = "0.3.16"
default-features = false
features = [
    "ansi",
    "env-filter",
    "fmt",
    "json",
    "registry",
    "tracing-log",
]

[dependencies.tracing-tower]
git = "https://github.com/tokio-rs/tracing"
default-features = false
rev = "e0642d949891546a3bb7e47080365ee7274f05cd"

[dependencies.metrics-tracing-context]
version = "0.12.0"
default-features = false

[dependencies.aws-sdk-s3]
version = "0.19.0"
default-features = false
features = [
    "rustls",
]
optional = true

[dependencies.aws-sdk-sqs]
version = "0.19.0"
default-features = false
features = [
    "rustls",
]
optional = true

[dependencies.aws-sdk-cloudwatch]
version = "0.19.0"
default-features = false
features = [
    "rustls",
]
optional = true

[dependencies.aws-sdk-cloudwatchlogs]
version = "0.19.0"
default-features = false
features = [
    "rustls",
]
optional = true

[dependencies.aws-sdk-elasticsearch]
version = "0.19.0"
default-features = false
features = [
    "rustls",
]
optional = true

[dependencies.aws-sdk-firehose]
version = "0.19.0"
default-features = false
features = [
    "rustls",
]
optional = true

[dependencies.aws-sdk-kinesis]
version = "0.19.0"
default-features = false
features = [
    "rustls",
]
optional = true

[dependencies.aws-types]
version = "0.49.0"
default-features = false
features = [
    "hardcoded-credentials",
]
optional = true

[dependencies.aws-sigv4]
version = "0.49.0"
default-features = false
features = [
    "sign-http",
]
optional = true

[dependencies.aws-config]
version = "0.49.0"
default-features = false
features = [
    "rustls",
]
optional = true

[dependencies.aws-smithy-async]
version = "0.49.0"
default-features = false
optional = true

[dependencies.aws-smithy-client]
version = "0.49.0"
default-features = false
features = [
    "client-hyper",
]
optional = true

[dependencies.aws-smithy-http]
version = "0.49.0"
default-features = false
features = [
    "event-stream",
]
optional = true

[dependencies.aws-smithy-http-tower]
version = "0.49.0"
default-features = false
optional = true

[dependencies.aws-smithy-types]
version = "0.49.0"
default-features = false
optional = true

[dependencies.azure_core]
git = "https://github.com/Azure/azure-sdk-for-rust.git"
rev = "b4544d4920fa3064eb921340054cd9cc130b7664"
default-features = false
features = [
    "enable_reqwest",
]
optional = true

[dependencies.azure_identity]
git = "https://github.com/Azure/azure-sdk-for-rust.git"
rev = "b4544d4920fa3064eb921340054cd9cc130b7664"
default-features = false
features = [
    "enable_reqwest",
]
optional = true

[dependencies.azure_storage]
git = "https://github.com/Azure/azure-sdk-for-rust.git"
rev = "b4544d4920fa3064eb921340054cd9cc130b7664"
default-features = false
optional = true

[dependencies.azure_storage_blobs]
git = "https://github.com/Azure/azure-sdk-for-rust.git"
rev = "b4544d4920fa3064eb921340054cd9cc130b7664"
default-features = false
optional = true

[dependencies.tower]
version = "0.4.13"
default-features = false
features = [
    "buffer",
    "limit",
    "retry",
    "timeout",
    "util",
    "balance",
    "discover",
]

[dependencies.serde]
version = "1.0.145"
default-features = false
features = [
    "derive",
]

[dependencies.serde-toml-merge]
version = "0.3.0"
default-features = false

[dependencies.serde_bytes]
version = "0.11.7"
default-features = false
features = [
    "std",
]
optional = true

[dependencies.serde_json]
version = "1.0.86"
default-features = false
features = [
    "raw_value",
]

[dependencies.serde_with]
version = "2.0.1"
default-features = false
features = [
    "macros",
    "std",
]
optional = true

[dependencies.serde_yaml]
version = "0.9.13"
default-features = false

[dependencies.rmp-serde]
version = "1.1.1"
default-features = false
optional = true

[dependencies.rmpv]
version = "1.0.0"
default-features = false
features = [
    "with-serde",
]
optional = true

[dependencies.prost]
version = "0.11.0"
default-features = false
features = [
    "std",
]

[dependencies.prost-types]
version = "0.11.0"
default-features = false
optional = true

[dependencies.goauth]
version = "0.13.1"
optional = true

[dependencies.smpl_jwt]
version = "0.7.1"
default-features = false
optional = true

[dependencies.lapin]
version = "2.1.1"
default-features = false
optional = true

[dependencies.async-graphql]
version = "4.0.15"
default-features = false
optional = true
features = [
    "chrono",
]

[dependencies.async-graphql-warp]
version = "4.0.15"
default-features = false
optional = true

[dependencies.itertools]
version = "0.10.5"
default-features = false
optional = true

[dependencies.crossterm]
version = "0.25.0"
default-features = false
features = [
    "event-stream",
]
optional = true

[dependencies.num-format]
version = "0.4.0"
default-features = false
features = [
    "with-num-bigint",
]
optional = true

[dependencies.number_prefix]
version = "0.4.0"
default-features = false
features = [
    "std",
]
optional = true

[dependencies.tui]
version = "0.19.0"
optional = true
default-features = false
features = [
    "crossterm",
]

[dependencies.datadog-filter]
path = "lib/datadog/filter"

[dependencies.datadog-search-syntax]
path = "lib/datadog/search-syntax"

[dependencies.hex]
version = "0.4.3"
default-features = false
optional = true

[dependencies.sha2]
version = "0.10.6"
default-features = false
optional = true

[dependencies.vrl]
path = "lib/vrl/vrl"

[dependencies.vrl-stdlib]
path = "lib/vrl/stdlib"

[dependencies.arc-swap]
version = "1.5"
default-features = false
optional = true

[dependencies.async-compression]
version = "0.3.12"
default-features = false
features = [
    "tokio",
    "gzip",
    "zstd",
]
optional = true

[dependencies.avro-rs]
version = "0.13.0"
default-features = false
optional = true

[dependencies.axum]
version = "0.5.16"
default-features = false

[dependencies.base64]
version = "0.13.0"
default-features = false
optional = true

[dependencies.bloom]
version = "0.3.2"
default-features = false
optional = true

[dependencies.bollard]
version = "0.13.0"
default-features = false
features = [
    "ssl",
    "chrono",
]

[dependencies.bytes]
version = "1.2.1"
default-features = false
features = [
    "serde",
]

[dependencies.bytesize]
version = "1.1.0"
default-features = false

[dependencies.chrono]
version = "0.4.22"
default-features = false
features = [
    "serde",
]

[dependencies.cidr-utils]
version = "0.5.7"
default-features = false

[dependencies.clap]
version = "4.0.15"
default-features = false
features = [
    "derive",
    "error-context",
    "env",
    "help",
    "std",
    "string",
    "usage",
    "wrap_help",
]

[dependencies.colored]
version = "2.0.0"
default-features = false

[dependencies.csv]
version = "1.1"
default-features = false

[dependencies.derivative]
version = "2.2.0"
default-features = false

[dependencies.dirs-next]
version = "2.0.0"
default-features = false
optional = true

[dependencies.dyn-clone]
version = "1.0.9"
default-features = false

[dependencies.encoding_rs]
version = "0.8.31"
default-features = false
features = [
    "serde",
]

[dependencies.enum_dispatch]
version = "0.3.8"
default-features = false

[dependencies.exitcode]
version = "1.1.2"
default-features = false

[dependencies.flate2]
version = "1.0.24"
default-features = false
features = [
    "default",
]

[dependencies.futures-util]
version = "0.3.21"
default-features = false

[dependencies.glob]
version = "0.3.0"
default-features = false

[dependencies.governor]
version = "0.5.0"
default-features = false
features = [
    "dashmap",
    "jitter",
    "std",
]
optional = true

[dependencies.grok]
version = "2.0.0"
default-features = false
optional = true

[dependencies.h2]
version = "0.3.13"
default-features = false
optional = true

[dependencies.hash_hasher]
version = "2.0.0"
default-features = false

[dependencies.headers]
version = "0.3.8"
default-features = false

[dependencies.hostname]
version = "0.3.1"
default-features = false

[dependencies.http]
version = "0.2.8"
default-features = false

[dependencies.http-body]
version = "0.4.5"
default-features = false

[dependencies.hyper]
version = "0.14.20"
default-features = false
features = [
    "client",
    "runtime",
    "http1",
    "http2",
    "server",
    "stream",
]

[dependencies.hyper-openssl]
version = "0.9.2"
default-features = false

[dependencies.hyper-proxy]
version = "0.9.1"
default-features = false
features = [
    "openssl-tls",
]

[dependencies.indexmap]
version = "~1.9.1"
default-features = false
features = [
    "serde",
]

[dependencies.infer]
version = "0.9.0"
default-features = false
optional = true

[dependencies.indoc]
version = "1.0.7"
default-features = false

[dependencies.inventory]
version = "0.3.2"
default-features = false

[dependencies.k8s-openapi]
version = "0.16.0"
default-features = false
features = [
    "api",
    "v1_19",
]
optional = true

[dependencies.kube]
version = "0.75.0"
default-features = false
features = [
    "client",
    "native-tls",
    "runtime",
]
optional = true

[dependencies.listenfd]
version = "1.0.0"
default-features = false
optional = true

[dependencies.logfmt]
version = "0.0.2"
default-features = false
optional = true

[dependencies.lru]
version = "0.8.1"
default-features = false
optional = true

[dependencies.maxminddb]
version = "0.23.0"
default-features = false
optional = true

[dependencies.md-5]
version = "0.10"
default-features = false
optional = true

[dependencies.mongodb]
version = "2.3.1"
default-features = false
features = [
    "tokio-runtime",
]
optional = true

[dependencies.nats]
version = "0.23.0"
default-features = false
optional = true

[dependencies.nkeys]
version = "0.2.0"
default-features = false
optional = true

[dependencies.nom]
version = "7.1.1"
default-features = false
optional = true

[dependencies.notify]
version = "5.0.0"
default-features = false
features = [
    "macos_fsevent",
]

[dependencies.once_cell]
version = "1.15"
default-features = false

[dependencies.openssl]
version = "0.10.42"
default-features = false

[dependencies.openssl-probe]
version = "0.1.5"
default-features = false

[dependencies.openssl-src]
version = "111"
default-features = false

[dependencies.ordered-float]
version = "3.2.0"
default-features = false

[dependencies.percent-encoding]
version = "2.2.0"
default-features = false

[dependencies.pin-project]
version = "1.0.12"
default-features = false

[dependencies.postgres-openssl]
version = "0.5.0"
default-features = false
features = [
    "runtime",
]
optional = true

[dependencies.pulsar]
version = "4.1.3"
default-features = false
features = [
    "tokio-runtime",
    "auth-oauth2",
]
optional = true

[dependencies.rand]
version = "0.8.5"
default-features = false
features = [
    "small_rng",
]

[dependencies.rand_distr]
version = "0.4.3"
default-features = false

[dependencies.rdkafka]
git = "https://github.com/fede1024/rust-rdkafka"
tag = "v0.29.0"
default-features = false
features = [
    "tokio",
    "libz",
    "ssl",
    "zstd",
    "dynamic-linking",
]
optional = true

[dependencies.redis]
version = "0.21.6"
default-features = false
features = [
    "connection-manager",
    "tokio-comp",
    "tokio-native-tls-comp",
]
optional = true

[dependencies.regex]
version = "1.6.0"
default-features = false
features = [
    "std",
    "perf",
]

[dependencies.roaring]
version = "0.10.1"
default-features = false
optional = true

[dependencies.seahash]
version = "4.1.0"
default-features = false

[dependencies.semver]
version = "1.0.14"
default-features = false
features = [
    "serde",
    "std",
]
optional = true

[dependencies.smallvec]
version = "1"
default-features = false
features = [
    "union",
]

[dependencies.snafu]
version = "0.7.2"
default-features = false
features = [
    "futures",
]

[dependencies.snap]
version = "1.0.5"
default-features = false
optional = true

[dependencies.socket2]
version = "0.4.7"
default-features = false

[dependencies.stream-cancel]
version = "0.8.1"
default-features = false

[dependencies.strip-ansi-escapes]
version = "0.1.1"
default-features = false

[dependencies.syslog]
version = "6.0.1"
default-features = false
optional = true

[dependencies.mimalloc]
version = "0.1.30"
default-features = true
optional = true

[dependencies.tokio-postgres]
version = "0.7.7"
default-features = false
features = [
    "runtime",
    "with-chrono-0_4",
]
optional = true

[dependencies.tokio-tungstenite]
version = "0.17.2"
default-features = false
features = [
    "connect",
]
optional = true

[dependencies.toml]
version = "0.5.9"
default-features = false

[dependencies.tonic]
version = "0.8"
optional = true
default-features = false
features = [
    "transport",
    "codegen",
    "prost",
    "tls",
    "tls-roots",
    "gzip",
]

[dependencies.trust-dns-proto]
version = "0.22.0"
default-features = false
features = [
    "dnssec",
]
optional = true

[dependencies.typetag]
version = "0.2.3"
default-features = false

[dependencies.url]
version = "2.3.1"
default-features = false
features = [
    "serde",
]

[dependencies.uuid]
version = "1"
default-features = false
features = [
    "serde",
    "v4",
]

[dependencies.warp]
version = "0.3.3"
default-features = false

[dependencies.heim]
git = "https://github.com/vectordotdev/heim.git"
branch = "update-nix"
default-features = false
features = [
    "disk",
]

[dependencies.mlua]
version = "0.8.4"
default-features = false
features = [
    "lua54",
    "send",
    "vendored",
]
optional = true

[dependencies.jsonschema]
version = "0.16.0"
default-features = false

[target."cfg(windows)".dependencies]
windows-service = "0.5.0"

[target."cfg(unix)".dependencies.atty]
version = "0.2.14"
default-features = false

[target."cfg(unix)".dependencies.nix]
version = "0.25.0"
default-features = false
features = [
    "socket",
    "signal",
]

[build-dependencies.prost-build]
version = "0.11.1"
default-features = false
optional = true

[build-dependencies.tonic-build]
version = "0.8"
default-features = false
features = [
    "transport",
    "prost",
]
optional = true

[dev-dependencies]
approx = "0.5.1"
base64 = "0.13.0"
libc = "0.2.135"
pretty_assertions = "1.3.0"
proptest = "1.0"
quickcheck = "1.0.3"
tempfile = "3.3.0"
tokio-test = "0.4.2"
tower-test = "0.4.0"
wiremock = "0.5.15"

[dev-dependencies.assert_cmd]
version = "2.0.4"
default-features = false

[dev-dependencies.azure_core]
git = "https://github.com/Azure/azure-sdk-for-rust.git"
rev = "b4544d4920fa3064eb921340054cd9cc130b7664"
default-features = false
features = [
    "enable_reqwest",
    "azurite_workaround",
]

[dev-dependencies.azure_identity]
git = "https://github.com/Azure/azure-sdk-for-rust.git"
rev = "b4544d4920fa3064eb921340054cd9cc130b7664"
default-features = false
features = [
    "enable_reqwest",
]

[dev-dependencies.azure_storage_blobs]
git = "https://github.com/Azure/azure-sdk-for-rust.git"
rev = "b4544d4920fa3064eb921340054cd9cc130b7664"
default-features = false
features = [
    "azurite_workaround",
]

[dev-dependencies.azure_storage]
git = "https://github.com/Azure/azure-sdk-for-rust.git"
rev = "b4544d4920fa3064eb921340054cd9cc130b7664"
default-features = false
features = [
    "azurite_workaround",
]

[dev-dependencies.criterion]
version = "0.4.0"
features = [
    "html_reports",
    "async_tokio",
]

[dev-dependencies.reqwest]
version = "0.11"
features = [
    "json",
]

[dev-dependencies.tokio]
version = "1.21.2"
features = [
    "test-util",
]

[dev-dependencies.value]
path = "lib/value"
features = [
    "test",
]

[dev-dependencies.vector-core]
path = "lib/vector-core"
default-features = false
features = [
    "vrl",
    "test",
]

[dev-dependencies.zstd]
version = "0.11.2"
default-features = false

[patch.crates-io.leveldb-sys]
git = "https://github.com/vectordotdev/leveldb-sys.git"
branch = "leveldb_mmap_limit"

[patch.crates-io.chrono]
git = "https://github.com/vectordotdev/chrono.git"
branch = "no-default-time-v0.4.22"

[patch.crates-io.h2]
git = "https://github.com/hyperium/h2.git"
rev = "f6aa3be6719270cd7b4094ee1940751b5f4ec88e"

[patch.crates-io.openssl-src]
git = "https://github.com/vectordotdev/openssl-src-rs.git"
branch = "enable_engine"

[patch.crates-io.tokio-util]
git = "https://github.com/vectordotdev/tokio"
version = "0.7"
rev = "3aa231cf6f33f74ca29077163879f0de9a207ad8"

[features]
default = [
    "api",
    "api-client",
    "enrichment-tables",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "rdkafka?/gssapi-vendored",
    "vrl-cli",
    "enterprise",
]
default-cmake = [
    "api",
    "api-client",
    "enrichment-tables",
    "rdkafka?/cmake_build",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "rdkafka?/gssapi-vendored",
    "vrl-cli",
    "enterprise",
]
default-msvc = [
    "api",
    "api-client",
    "enrichment-tables",
    "rdkafka?/cmake_build",
    "sinks",
    "sources",
    "transforms",
    "vrl-cli",
    "enterprise",
]
default-musl = [
    "api",
    "api-client",
    "enrichment-tables",
    "rdkafka?/cmake_build",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "rdkafka?/gssapi-vendored",
    "vrl-cli",
    "enterprise",
]
default-no-api-client = [
    "api",
    "enrichment-tables",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "rdkafka?/gssapi-vendored",
    "vrl-cli",
    "enterprise",
]
default-no-vrl-cli = [
    "api",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "rdkafka?/gssapi-vendored",
    "enterprise",
]
tokio-console = [
    "dep:console-subscriber",
    "tokio/tracing",
]
all-logs = [
    "sinks-logs",
    "sources-logs",
    "sources-dnstap",
    "transforms-logs",
]
all-metrics = [
    "sinks-metrics",
    "sources-metrics",
    "transforms-metrics",
    "enterprise",
]
target-aarch64-unknown-linux-gnu = [
    "api",
    "api-client",
    "enrichment-tables",
    "rdkafka?/cmake_build",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "vrl-cli",
    "enterprise",
]
target-aarch64-unknown-linux-musl = [
    "api",
    "api-client",
    "enrichment-tables",
    "rdkafka?/cmake_build",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "vrl-cli",
    "enterprise",
]
target-armv7-unknown-linux-gnueabihf = [
    "api",
    "api-client",
    "enrichment-tables",
    "rdkafka?/cmake_build",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "vrl-cli",
    "enterprise",
]
target-armv7-unknown-linux-musleabihf = [
    "api",
    "api-client",
    "rdkafka?/cmake_build",
    "enrichment-tables",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "vrl-cli",
    "enterprise",
]
target-x86_64-unknown-linux-gnu = [
    "api",
    "api-client",
    "rdkafka?/cmake_build",
    "enrichment-tables",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "rdkafka?/gssapi-vendored",
    "vrl-cli",
    "enterprise",
]
target-x86_64-unknown-linux-musl = [
    "api",
    "api-client",
    "rdkafka?/cmake_build",
    "enrichment-tables",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "vrl-cli",
    "enterprise",
]
target-powerpc64le-unknown-linux-gnu = [
    "api",
    "api-client",
    "enrichment-tables",
    "rdkafka?/cmake_build",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "vrl-cli",
    "enterprise",
]
target-powerpc-unknown-linux-gnu = [
    "api",
    "api-client",
    "enrichment-tables",
    "rdkafka?/cmake_build",
    "sinks",
    "sources",
    "sources-dnstap",
    "transforms",
    "unix",
    "vrl-cli",
    "enterprise",
]
unix = [
    "mimalloc",
]
kubernetes = [
    "dep:k8s-openapi",
    "dep:kube",
]
docker = [
    "dep:dirs-next",
]
api = [
    "dep:async-graphql",
    "dep:async-graphql-warp",
    "dep:base64",
    "dep:itertools",
    "vector-core/api",
]
api-client = [
    "dep:crossterm",
    "dep:num-format",
    "dep:number_prefix",
    "dep:tui",
    "vector-core/api",
    "dep:vector-api-client",
]
aws-core = [
    "aws-config",
    "dep:aws-sigv4",
    "dep:aws-types",
    "dep:aws-smithy-async",
    "dep:aws-smithy-client",
    "dep:aws-smithy-http",
    "dep:aws-smithy-http-tower",
    "dep:aws-smithy-types",
]
protobuf-build = [
    "dep:tonic-build",
    "dep:prost-build",
]
gcp = [
    "dep:base64",
    "dep:goauth",
    "dep:smpl_jwt",
]
enrichment-tables = [
    "enrichment-tables-geoip",
]
enrichment-tables-geoip = [
    "dep:maxminddb",
]
sources = [
    "custom-sources-logs",
]
custom-sources-logs = [
    "sources-file",
    "sources-demo_logs",
    "sources-stdin",
    "sources-http_server",
    "sources-kafka",
    "sources-vector",
]
sources-logs = [
    "sources-amqp",
    "sources-aws_kinesis_firehose",
    "sources-aws_s3",
    "sources-aws_sqs",
    "sources-datadog_agent",
    "sources-demo_logs",
    "sources-docker_logs",
    "sources-exec",
    "sources-file",
    "sources-fluent",
    "sources-gcp_pubsub",
    "sources-heroku_logs",
    "sources-http_server",
    "sources-http_client",
    "sources-internal_logs",
    "sources-journald",
    "sources-kafka",
    "sources-kubernetes_logs",
    "sources-logstash",
    "sources-nats",
    "sources-opentelemetry",
    "sources-file-descriptor",
    "sources-redis",
    "sources-socket",
    "sources-splunk_hec",
    "sources-stdin",
    "sources-syslog",
    "sources-vector",
]
sources-metrics = [
    "sources-apache_metrics",
    "sources-aws_ecs_metrics",
    "sources-eventstoredb_metrics",
    "sources-host_metrics",
    "sources-internal_metrics",
    "sources-mongodb_metrics",
    "sources-nginx_metrics",
    "sources-postgresql_metrics",
    "sources-prometheus",
    "sources-statsd",
    "sources-vector",
]
sources-amqp = [
    "lapin",
]
sources-apache_metrics = []
sources-aws_ecs_metrics = []
sources-aws_kinesis_firehose = [
    "dep:base64",
    "dep:infer",
]
sources-aws_s3 = [
    "aws-core",
    "dep:aws-sdk-sqs",
    "dep:aws-sdk-s3",
    "dep:semver",
    "dep:async-compression",
    "sources-aws_sqs",
    "tokio-util/io",
]
sources-aws_sqs = [
    "aws-core",
    "dep:aws-sdk-sqs",
]
sources-datadog_agent = [
    "sources-utils-http-error",
    "protobuf-build",
]
sources-demo_logs = [
    "dep:fakedata",
]
sources-dnstap = [
    "dep:base64",
    "dep:trust-dns-proto",
    "dep:dnsmsg-parser",
    "protobuf-build",
]
sources-docker_logs = [
    "docker",
]
sources-eventstoredb_metrics = []
sources-exec = []
sources-file = [
    "dep:file-source",
]
sources-file-descriptor = [
    "tokio-util/io",
]
sources-fluent = [
    "dep:base64",
    "sources-utils-net-tcp",
    "tokio-util/net",
    "dep:rmpv",
    "dep:rmp-serde",
    "dep:serde_bytes",
]
sources-gcp_pubsub = [
    "gcp",
    "dep:h2",
    "dep:prost-types",
    "protobuf-build",
    "dep:tonic",
]
sources-heroku_logs = [
    "sources-utils-http",
    "sources-utils-http-query",
    "sources-http_server",
]
sources-host_metrics = [
    "heim/cpu",
    "heim/host",
    "heim/memory",
    "heim/net",
]
sources-http_client = [
    "sources-utils-http-client",
]
sources-http_server = [
    "sources-utils-http",
    "sources-utils-http-query",
]
sources-internal_logs = []
sources-internal_metrics = []
sources-journald = []
sources-kafka = [
    "dep:rdkafka",
]
sources-kubernetes_logs = [
    "dep:file-source",
    "kubernetes",
    "transforms-reduce",
]
sources-logstash = [
    "sources-utils-net-tcp",
    "tokio-util/net",
]
sources-mongodb_metrics = [
    "dep:mongodb",
]
sources-nats = [
    "dep:nats",
    "dep:nkeys",
]
sources-nginx_metrics = [
    "dep:nom",
]
sources-opentelemetry = [
    "dep:hex",
    "dep:opentelemetry-proto",
    "dep:prost-types",
    "sources-http_server",
    "sources-utils-http",
    "sources-vector",
]
sources-postgresql_metrics = [
    "dep:postgres-openssl",
    "dep:tokio-postgres",
]
sources-prometheus = [
    "dep:prometheus-parser",
    "sinks-prometheus",
    "sources-utils-http-client",
]
sources-redis = [
    "dep:redis",
]
sources-socket = [
    "sources-utils-net",
    "tokio-util/net",
]
sources-splunk_hec = [
    "dep:roaring",
]
sources-statsd = [
    "sources-utils-net",
    "tokio-util/net",
]
sources-stdin = [
    "tokio-util/io",
]
sources-syslog = [
    "codecs/syslog",
    "sources-utils-net",
    "tokio-util/net",
]
sources-utils-http = [
    "dep:snap",
    "sources-utils-http-auth",
    "sources-utils-http-encoding",
    "sources-utils-http-error",
    "sources-utils-http-prelude",
]
sources-utils-http-auth = [
    "sources-utils-http-error",
]
sources-utils-http-encoding = [
    "dep:snap",
    "sources-utils-http-error",
]
sources-utils-http-error = []
sources-utils-http-prelude = [
    "sources-utils-http",
    "sources-utils-http-auth",
    "sources-utils-http-encoding",
    "sources-utils-http-error",
]
sources-utils-http-query = []
sources-utils-http-client = [
    "sources-utils-http",
    "sources-http_server",
]
sources-utils-net = [
    "sources-utils-net-tcp",
    "sources-utils-net-udp",
    "sources-utils-net-unix",
]
sources-utils-net-tcp = [
    "listenfd",
]
sources-utils-net-udp = [
    "listenfd",
]
sources-utils-net-unix = []
sources-vector = [
    "dep:tonic",
    "protobuf-build",
]
transforms = [
    "transforms-logs",
    "transforms-metrics",
]
transforms-logs = [
    "transforms-aws_ec2_metadata",
    "transforms-dedupe",
    "transforms-filter",
    "transforms-geoip",
    "transforms-lua",
    "transforms-metric_to_log",
    "transforms-pipelines",
    "transforms-reduce",
    "transforms-remap",
    "transforms-route",
    "transforms-sample",
    "transforms-throttle",
]
transforms-metrics = [
    "transforms-aggregate",
    "transforms-filter",
    "transforms-lua",
    "transforms-metric_to_log",
    "transforms-pipelines",
    "transforms-remap",
    "transforms-tag_cardinality_limit",
    "transforms-throttle",
]
transforms-aggregate = []
transforms-aws_ec2_metadata = [
    "dep:arc-swap",
]
transforms-dedupe = [
    "dep:lru",
]
transforms-filter = []
transforms-geoip = [
    "dep:maxminddb",
]
transforms-lua = [
    "dep:mlua",
    "vector-core/lua",
]
transforms-metric_to_log = []
transforms-pipelines = [
    "transforms-filter",
    "transforms-route",
]
transforms-reduce = []
transforms-remap = []
transforms-route = []
transforms-sample = []
transforms-tag_cardinality_limit = [
    "dep:bloom",
]
transforms-throttle = [
    "dep:governor",
]
sinks = [
    "custom-sinks-logs",
]
custom-sinks-logs = [
    "sinks-blackhole",
    "sinks-clickhouse",
    "sinks-console",
    "sinks-elasticsearch",
    "sinks-file",
    "sinks-http",
    "sinks-influxdb",
    "sinks-kafka",
    "sinks-loki",
    "sinks-memory_queue",
    "sinks-nats",
    "sinks-pulsar",
    "sinks-redis",
    "sinks-socket",
    "sinks-splunk_hec",
    "sinks-vector",
    "sinks-websocket",
]
sinks-logs = [
    "sinks-amqp",
    "sinks-apex",
    "sinks-aws_cloudwatch_logs",
    "sinks-aws_kinesis_firehose",
    "sinks-aws_kinesis_streams",
    "sinks-aws_s3",
    "sinks-aws_sqs",
    "sinks-axiom",
    "sinks-azure_blob",
    "sinks-azure_monitor_logs",
    "sinks-blackhole",
    "sinks-chronicle",
    "sinks-clickhouse",
    "sinks-console",
    "sinks-datadog_archives",
    "sinks-datadog_events",
    "sinks-datadog_logs",
    "sinks-datadog_traces",
    "sinks-elasticsearch",
    "sinks-file",
    "sinks-gcp",
    "sinks-honeycomb",
    "sinks-http",
    "sinks-humio",
    "sinks-influxdb",
    "sinks-kafka",
    "sinks-logdna",
    "sinks-loki",
    "sinks-memory_queue",
    "sinks-nats",
    "sinks-new_relic_logs",
    "sinks-new_relic",
    "sinks-papertrail",
    "sinks-pulsar",
    "sinks-redis",
    "sinks-sematext",
    "sinks-socket",
    "sinks-splunk_hec",
    "sinks-vector",
    "sinks-websocket",
]
sinks-metrics = [
    "sinks-aws_cloudwatch_metrics",
    "sinks-blackhole",
    "sinks-console",
    "sinks-datadog_metrics",
    "sinks-humio",
    "sinks-influxdb",
    "sinks-kafka",
    "sinks-prometheus",
    "sinks-sematext",
    "sinks-statsd",
    "sinks-vector",
    "sinks-splunk_hec",
]
sinks-amqp = [
    "lapin",
]
sinks-apex = []
sinks-aws_cloudwatch_logs = [
    "aws-core",
    "dep:aws-sdk-cloudwatchlogs",
]
sinks-aws_cloudwatch_metrics = [
    "aws-core",
    "dep:aws-sdk-cloudwatch",
]
sinks-aws_kinesis_firehose = [
    "aws-core",
    "dep:aws-sdk-firehose",
]
sinks-aws_kinesis_streams = [
    "aws-core",
    "dep:aws-sdk-kinesis",
]
sinks-aws_s3 = [
    "dep:base64",
    "dep:md-5",
    "aws-core",
    "dep:aws-sdk-s3",
]
sinks-aws_sqs = [
    "aws-core",
    "dep:aws-sdk-sqs",
]
sinks-axiom = [
    "sinks-elasticsearch",
]
sinks-azure_blob = [
    "dep:azure_core",
    "dep:azure_identity",
    "dep:azure_storage",
    "dep:azure_storage_blobs",
]
sinks-azure_monitor_logs = []
sinks-blackhole = []
sinks-chronicle = []
sinks-clickhouse = []
sinks-console = []
sinks-datadog_archives = [
    "sinks-aws_s3",
    "sinks-azure_blob",
    "sinks-gcp",
]
sinks-datadog_events = []
sinks-datadog_logs = []
sinks-datadog_metrics = [
    "protobuf-build",
]
sinks-datadog_traces = [
    "protobuf-build",
    "dep:rmpv",
    "dep:rmp-serde",
    "dep:serde_bytes",
]
sinks-elasticsearch = [
    "aws-core",
    "transforms-metric_to_log",
]
sinks-file = [
    "dep:async-compression",
]
sinks-gcp = [
    "dep:base64",
    "gcp",
]
sinks-honeycomb = []
sinks-http = []
sinks-humio = [
    "sinks-splunk_hec",
    "transforms-metric_to_log",
]
sinks-influxdb = []
sinks-kafka = [
    "dep:rdkafka",
]
sinks-logdna = []
sinks-loki = [
    "loki-logproto",
]
sinks-nats = [
    "dep:nats",
    "dep:nkeys",
]
sinks-new_relic_logs = [
    "sinks-http",
]
sinks-new_relic = []
sinks-papertrail = [
    "dep:syslog",
]
sinks-prometheus = [
    "aws-core",
    "dep:base64",
    "dep:prometheus-parser",
    "dep:snap",
    "dep:serde_with",
]
sinks-pulsar = [
    "dep:avro-rs",
    "dep:pulsar",
]
sinks-redis = [
    "dep:redis",
]
sinks-sematext = [
    "sinks-elasticsearch",
    "sinks-influxdb",
]
sinks-socket = [
    "sinks-utils-udp",
]
sinks-splunk_hec = []
sinks-statsd = [
    "sinks-utils-udp",
    "tokio-util/net",
]
sinks-utils-udp = []
sinks-vector = [
    "sinks-utils-udp",
    "dep:tonic",
    "protobuf-build",
]
sinks-websocket = [
    "dep:tokio-tungstenite",
]
sinks-memory_queue = []
enterprise = [
    "dep:hex",
    "dep:sha2",
    "sinks-datadog_logs",
    "sinks-datadog_metrics",
    "sources-host_metrics",
    "sources-internal_logs",
    "sources-internal_metrics",
    "transforms-remap",
    "transforms-filter",
]
nightly = []
all-integration-tests = [
    "amqp-integration-tests",
    "apex-integration-tests",
    "aws-integration-tests",
    "axiom-integration-tests",
    "azure-integration-tests",
    "chronicle-integration-tests",
    "clickhouse-integration-tests",
    "datadog-agent-integration-tests",
    "datadog-logs-integration-tests",
    "datadog-metrics-integration-tests",
    "datadog-traces-integration-tests",
    "docker-logs-integration-tests",
    "es-integration-tests",
    "eventstoredb_metrics-integration-tests",
    "fluent-integration-tests",
    "gcp-cloud-storage-integration-tests",
    "gcp-integration-tests",
    "gcp-pubsub-integration-tests",
    "http-client-integration-tests",
    "humio-integration-tests",
    "influxdb-integration-tests",
    "kafka-integration-tests",
    "logstash-integration-tests",
    "loki-integration-tests",
    "mongodb_metrics-integration-tests",
    "nats-integration-tests",
    "nginx-integration-tests",
    "opentelemetry-integration-tests",
    "postgresql_metrics-integration-tests",
    "prometheus-integration-tests",
    "pulsar-integration-tests",
    "redis-integration-tests",
    "splunk-integration-tests",
    "dnstap-integration-tests",
]
amqp-integration-tests = [
    "sources-amqp",
    "sinks-amqp",
]
aws-integration-tests = [
    "aws-cloudwatch-logs-integration-tests",
    "aws-cloudwatch-metrics-integration-tests",
    "aws-ec2-metadata-integration-tests",
    "aws-ecs-metrics-integration-tests",
    "aws-kinesis-firehose-integration-tests",
    "aws-kinesis-streams-integration-tests",
    "aws-s3-integration-tests",
    "aws-sqs-integration-tests",
]
azure-integration-tests = [
    "azure-blob-integration-tests",
]
apex-integration-tests = [
    "sinks-apex",
]
aws-cloudwatch-logs-integration-tests = [
    "sinks-aws_cloudwatch_logs",
]
aws-cloudwatch-metrics-integration-tests = [
    "sinks-aws_cloudwatch_metrics",
]
aws-ec2-metadata-integration-tests = [
    "transforms-aws_ec2_metadata",
]
aws-ecs-metrics-integration-tests = [
    "sources-aws_ecs_metrics",
]
aws-kinesis-firehose-integration-tests = [
    "sinks-aws_kinesis_firehose",
    "dep:aws-sdk-elasticsearch",
    "sinks-elasticsearch",
]
aws-kinesis-streams-integration-tests = [
    "sinks-aws_kinesis_streams",
]
aws-s3-integration-tests = [
    "sinks-aws_s3",
    "sources-aws_s3",
]
aws-sqs-integration-tests = [
    "sinks-aws_sqs",
    "sources-aws_sqs",
]
axiom-integration-tests = [
    "sinks-axiom",
]
azure-blob-integration-tests = [
    "sinks-azure_blob",
]
chronicle-integration-tests = [
    "sinks-gcp",
]
clickhouse-integration-tests = [
    "sinks-clickhouse",
]
datadog-agent-integration-tests = [
    "sources-datadog_agent",
]
datadog-logs-integration-tests = [
    "sinks-datadog_logs",
]
datadog-metrics-integration-tests = [
    "sinks-datadog_metrics",
]
datadog-traces-integration-tests = [
    "sources-datadog_agent",
    "sinks-datadog_traces",
]
docker-logs-integration-tests = [
    "sources-docker_logs",
    "unix",
]
es-integration-tests = [
    "sinks-elasticsearch",
]
eventstoredb_metrics-integration-tests = [
    "sources-eventstoredb_metrics",
]
fluent-integration-tests = [
    "docker",
    "sources-fluent",
]
gcp-cloud-storage-integration-tests = [
    "sinks-gcp",
]
gcp-integration-tests = [
    "sinks-gcp",
]
gcp-pubsub-integration-tests = [
    "sinks-gcp",
    "sources-gcp_pubsub",
]
humio-integration-tests = [
    "sinks-humio",
]
http-client-integration-tests = [
    "sources-http_client",
]
influxdb-integration-tests = [
    "sinks-influxdb",
]
kafka-integration-tests = [
    "sinks-kafka",
    "sources-kafka",
]
logstash-integration-tests = [
    "docker",
    "sources-logstash",
]
loki-integration-tests = [
    "sinks-loki",
]
mongodb_metrics-integration-tests = [
    "sources-mongodb_metrics",
]
nats-integration-tests = [
    "sinks-nats",
    "sources-nats",
]
nginx-integration-tests = [
    "sources-nginx_metrics",
]
opentelemetry-integration-tests = [
    "sources-opentelemetry",
]
postgresql_metrics-integration-tests = [
    "sources-postgresql_metrics",
]
prometheus-integration-tests = [
    "sinks-prometheus",
    "sources-prometheus",
    "sinks-influxdb",
]
pulsar-integration-tests = [
    "sinks-pulsar",
]
redis-integration-tests = [
    "sinks-redis",
    "sources-redis",
]
splunk-integration-tests = [
    "sinks-splunk_hec",
]
dnstap-integration-tests = [
    "sources-dnstap",
]
disable-resolv-conf = []
shutdown-tests = [
    "api",
    "sinks-blackhole",
    "sinks-console",
    "sinks-prometheus",
    "sources",
    "transforms-lua",
    "transforms-remap",
    "unix",
]
cli-tests = [
    "sinks-blackhole",
    "sinks-socket",
    "sources-demo_logs",
    "sources-file",
]
vector-api-tests = [
    "sources-demo_logs",
    "transforms-remap",
    "sinks-blackhole",
]
vector-unit-test-tests = [
    "sources-demo_logs",
    "transforms-remap",
    "transforms-route",
    "transforms-filter",
    "transforms-reduce",
    "sinks-console",
]
enterprise-tests = [
    "enterprise",
    "sources-demo_logs",
    "sinks-blackhole",
    "sinks-loki",
    "api",
]
benches = [
    "sinks-file",
    "sinks-http",
    "sinks-socket",
    "sources-file",
    "sources-socket",
    "sources-syslog",
    "transforms-lua",
    "transforms-sample",
]
dnstap-benches = [
    "sources-dnstap",
]
language-benches = [
    "sinks-socket",
    "sources-socket",
    "transforms-lua",
    "transforms-remap",
]
statistic-benches = []
remap-benches = [
    "transforms-remap",
]
transform-benches = [
    "transforms-filter",
    "transforms-dedupe",
    "transforms-reduce",
    "transforms-route",
]
codecs-benches = []
loki-benches = [
    "sinks-loki",
]
enrichment-tables-benches = [
    "enrichment-tables-geoip",
]

[[bench]]
name = "default"
harness = false
required-features = [
    "benches",
]

[[bench]]
name = "dnstap"
path = "benches/dnstap/mod.rs"
harness = false
required-features = [
    "dnstap-benches",
]

[[bench]]
name = "remap"
harness = false
required-features = [
    "remap-benches",
]

[[bench]]
name = "enrichment_tables"
harness = false
required-features = [
    "enrichment-tables-benches",
]

[[bench]]
name = "languages"
harness = false
required-features = [
    "language-benches",
]

[[bench]]
name = "loki"
harness = false
required-features = [
    "loki-benches",
]

[[bench]]
name = "distribution_statistic"
harness = false
required-features = [
    "statistic-benches",
]

[[bench]]
name = "transform"
path = "benches/transform/main.rs"
harness = false
test = false
required-features = [
    "transform-benches",
]

[[bench]]
name = "codecs"
path = "benches/codecs/main.rs"
harness = false
required-features = [
    "codecs-benches",
]
