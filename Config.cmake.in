@PACKAGE_INIT@

set(EXPORT_PACKAGE_NAME vectorcxx-vector)
include("${CMAKE_CURRENT_LIST_DIR}/${EXPORT_PACKAGE_NAME}-targets.cmake")

# add third party dependencies
# only the top level project will search all dependencies for itself and all its sub projects so that cmake configuration faster
    
    find_package(ZLIB REQUIRED)
    
    find_library(RDKAFKA_LIBRARY NAMES rdkafka REQUIRED)
    
    
    find_package(OpenSSL REQUIRED)

# we need below part to set interface lib for `vectorcxx-static`, since the `-static` postfix is brought
# by corrosion, and will not be found
add_library(vectorcxx-static INTERFACE IMPORTED)

find_library(VECTORCXX_LIB NAMES vectorcxx REQUIRED)
if (VECTORCXX_LIB)
    message(STATUS "[library found] library=VECTORCXX_LIB path=${VECTORCXX_LIB}")
else ()
    message(FATAL_ERROR "[library not found] library='VECTORCXX_LIB'")
endif ()

message(STATUS "VECTORCXX_LIB: ${VECTORCXX_LIB}, VCPKG_TARGET_TRIPLET: ${VCPKG_TARGET_TRIPLET}, _HOST_TRIPLET: ${_HOST_TRIPLET}")

set_target_properties(vectorcxx-static PROPERTIES
  INTERFACE_LINK_LIBRARIES ${VECTORCXX_LIB}
)

    if("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
    find_library(IOKIT_LIBRARY NAMES IOKit REQUIRED)
    endif()
    if("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
    find_library(SECURITY_LIBRARY NAMES Security REQUIRED)
    endif()
    if("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
    find_library(CORESERVICES_LIBRARY NAMES CoreServices REQUIRED)
    endif()
    if("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
    find_library(COREFOUNDATION_LIBRARY NAMES CoreFoundation REQUIRED)
    endif()

check_required_components(${EXPORT_PACKAGE_NAME})